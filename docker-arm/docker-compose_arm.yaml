services:
  ecosystem-workbench:
    image: ecosystemai/ecosystem-workbench:arm64
    container_name: ecosystem-workbench
    restart: unless-stopped
    environment:
      IP: ${SERVER_IP}
      PORT: "3001"
    networks:
      - ecosystem
    ports:
      - "80:80"
    depends_on:
      ecosystem-server:
        condition: service_healthy
      ecosystem-runtime-solo:
        condition: service_started

  ecosystem-server:
    image: ecosystemai/ecosystem-server:arm64
    container_name: ecosystem-server
    restart: unless-stopped
    environment:
      MASTER_KEY: ${ECOSYSTEM_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      IP: ${SERVER_IP}
      PORT: 3001
      CLI_SETTINGS: -Dserver.port=3001
      RESET_USER: "true"
      NO_WORKBENCH: "true"
    volumes:
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "3001:3001"
      - "54445:54445"
      - "54321:54321"
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --quiet http://localhost:3001/api/v1/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20

  ecosystem-runtime-solo:
    image: ecosystemai/ecosystem-runtime-solo:arm64
    container_name: ecosystem-runtime
    restart: unless-stopped
    environment:
      MASTER_KEY: ${ECOSYSTEM_API_KEY}
      NO_MONGODB: 'true'
      FEATURE_DELAY: 60
      MONITORING_DELAY: 30
      PORT: 8091
    volumes:
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "8091:8091"
    depends_on:
      ecosystem-server:
        condition: service_healthy

  ecosystem-runtime-solo2:
    image: ecosystemai/ecosystem-runtime-solo:arm64
    container_name: ecosystem-runtime2
    restart: unless-stopped
    environment:
      MASTER_KEY: ${ECOSYSTEM_API_KEY}
      NO_MONGODB: 'true'
      FEATURE_DELAY: 800
      MONITORING_DELAY: 240
      PORT: 8092
    volumes:
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "8092:8092"
    depends_on:
      ecosystem-server:
        condition: service_healthy

  ecosystem-runtime-solo3:
    image: ecosystemai/ecosystem-runtime-solo:arm64
    container_name: ecosystem-runtime3
    restart: unless-stopped
    environment:
      MASTER_KEY: ${ECOSYSTEM_API_KEY}
      NO_MONGODB: 'true'
      FEATURE_DELAY: 800
      MONITORING_DELAY: 240
      PORT: 8093
    volumes:
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "8093:8093"
    depends_on:
      ecosystem-server:
        condition: service_healthy

  ecosystem-runtime-solo4:
    image: ecosystemai/ecosystem-runtime-solo:arm64
    container_name: ecosystem-runtime4
    restart: unless-stopped
    environment:
      MASTER_KEY: ${ECOSYSTEM_API_KEY}
      NO_MONGODB: 'true'
      FEATURE_DELAY: 800
      MONITORING_DELAY: 240
      PORT: 8094
    volumes:
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "8094:8094"
    depends_on:
      ecosystem-server:
        condition: service_healthy

  ecosystem-runtime-solo5:
    image: ecosystemai/ecosystem-runtime-solo:arm64
    container_name: ecosystem-runtime5
    restart: unless-stopped
    environment:
      MASTER_KEY: ${ECOSYSTEM_API_KEY}
      NO_MONGODB: 'true'
      FEATURE_DELAY: 800
      MONITORING_DELAY: 240
      PORT: 8095
    volumes:
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "8095:8095"
    depends_on:
      ecosystem-server:
        condition: service_healthy

  ecosystem-runtime-solo6:
    image: ecosystemai/ecosystem-runtime-solo:arm64
    container_name: ecosystem-runtime6
    restart: unless-stopped
    environment:
      MASTER_KEY: ${ECOSYSTEM_API_KEY}
      NO_MONGODB: 'true'
      FEATURE_DELAY: 800
      MONITORING_DELAY: 240
      PORT: 8096
    volumes:
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "8096:8096"
    depends_on:
      ecosystem-server:
        condition: service_healthy

  ecosystem-runtime-solo7:
    image: ecosystemai/ecosystem-runtime-solo:arm64
    container_name: ecosystem-runtime7
    restart: unless-stopped
    environment:
      MASTER_KEY: ${ECOSYSTEM_API_KEY}
      NO_MONGODB: 'true'
      FEATURE_DELAY: 800
      MONITORING_DELAY: 240
      PORT: 8097
    volumes:
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "8097:8097"
    depends_on:
      ecosystem-server:
        condition: service_healthy

  ecosystem-notebooks:
    image: ecosystemai/ecosystem-notebooks:arm64
    container_name: ecosystem-notebooks
    restart: unless-stopped
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - ${DATA_PATH}/notebooks-users/notebooks:/app/Shared Projects
      - ${DATA_PATH}/notebooks-users:/home
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "5111:8000"
      - "8010:8010"
    depends_on: 
      - ecosystem-server

  ecosystem-grafana:
    image: ecosystemai/ecosystem-grafana:arm64
    container_name: ecosystem-worker-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_AUTH_JWT_URL: http://ecosystem-server:3001/api/auth/login
      GF_AUTH_USERNAME: admin@ecosystem.ai
      GF_AUTH_PASSWORD: password
    volumes:
      - ./grafana:/var/lib/grafana
    networks:
      - ecosystem
    ports:
      - "3000:3000"
    depends_on: 
      ecosystem-server:
        condition: service_healthy
      ecosystem-runtime-solo:
        condition: service_started

  ecosystem-manager:
    image: ecosystemai/ecosystem-manager
    container_name: ecosystem-manager
    restart: unless-stopped
    networks:
      - ecosystem
    depends_on:
      ecosystem-server:
        condition: service_healthy
      ecosystem-runtime-solo:
        condition: service_started

networks:
  ecosystem:
    external: true

